{"ast":null,"code":"var _jsxFileName = \"/Users/laurachicos/Desktop/COVID/screens/LinksScreen.js\";\nimport { Ionicons } from '@expo/vector-icons';\nimport * as WebBrowser from 'expo-web-browser';\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { RectButton, ScrollView } from 'react-native-gesture-handler';\nexport default function LinksScreen() {\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    contentContainerStyle: styles.contentContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, React.createElement(OptionButton, {\n    icon: \"md-school\",\n    label: \"Read the Expo documentation\",\n    onPress: function onPress() {\n      return WebBrowser.openBrowserAsync('https://docs.expo.io');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.titleText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, \"About\"), React.createElement(Text, {\n    style: styles.optionText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, \"Thank you for downloading the \\u201C[insert name]\\u201D App! [name] is intended to provide healthcare providers with easily accessible information during the COVID19 pandemic. This app provide resources for clinicians on relevant up-to-date information of COVID19 and hospital protocols for PPE usage and ventilation. The ventilation tab is intended as quick reference for those who have experience in ventilation (i.e. respiratory therapists, anesthesiologists) and as a step-by-step resource for inexperienced providers called upon to manage ventilated patients during the COVID crisis.\"));\n}\n\nfunction OptionButton(_ref) {\n  var icon = _ref.icon,\n      label = _ref.label,\n      onPress = _ref.onPress,\n      isLastOption = _ref.isLastOption;\n  return React.createElement(RectButton, {\n    style: [styles.option, isLastOption && styles.lastOption],\n    onPress: onPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.optionIconContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, React.createElement(Ionicons, {\n    name: icon,\n    size: 22,\n    color: \"rgba(0,0,0,0.35)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.optionTextContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.optionText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, label))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fafafa'\n  },\n  contentContainer: {\n    paddingTop: 15\n  },\n  optionIconContainer: {\n    marginRight: 12\n  },\n  titleText: {\n    marginTop: 30,\n    marginBottom: 30,\n    fontSize: 36,\n    textAlign: 'center'\n  },\n  option: {\n    backgroundColor: '#fdfdfd',\n    paddingHorizontal: 15,\n    paddingVertical: 15,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderBottomWidth: 0,\n    borderColor: '#ededed'\n  },\n  lastOption: {\n    borderBottomWidth: StyleSheet.hairlineWidth\n  },\n  optionText: {\n    fontSize: 15,\n    alignSelf: 'flex-start',\n    marginTop: 1\n  }\n});","map":{"version":3,"sources":["/Users/laurachicos/Desktop/COVID/screens/LinksScreen.js"],"names":["Ionicons","WebBrowser","React","RectButton","ScrollView","LinksScreen","styles","container","contentContainer","openBrowserAsync","titleText","optionText","OptionButton","icon","label","onPress","isLastOption","option","lastOption","flexDirection","optionIconContainer","optionTextContainer","StyleSheet","create","flex","backgroundColor","paddingTop","marginRight","marginTop","marginBottom","fontSize","textAlign","paddingHorizontal","paddingVertical","borderWidth","hairlineWidth","borderBottomWidth","borderColor","alignSelf"],"mappings":"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","sourcesContent":["import { Ionicons } from '@expo/vector-icons';\nimport * as WebBrowser from 'expo-web-browser';\nimport * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { RectButton, ScrollView } from 'react-native-gesture-handler';\n\nexport default function LinksScreen() {\n  return (\n    <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n      <OptionButton\n        icon=\"md-school\"\n        label=\"Read the Expo documentation\"\n        onPress={() => WebBrowser.openBrowserAsync('https://docs.expo.io')}\n      />\n\n    <Text style={styles.titleText}>\n        About\n    </Text>\n\n    <Text style={styles.optionText}>\nThank you for downloading the “[insert name]” App!\n[name] is intended to provide healthcare providers with easily accessible information during the COVID19 pandemic. This app provide resources for clinicians on relevant up-to-date information of COVID19 and hospital protocols for PPE usage and ventilation. \n\nThe ventilation tab is intended as quick reference for those who have experience in ventilation (i.e. respiratory therapists, anesthesiologists) and as a step-by-step resource for inexperienced providers called upon to manage ventilated patients during the COVID crisis.\n\n  </Text>\n    </ScrollView>\n  )\n}\n\nfunction OptionButton({ icon, label, onPress, isLastOption }) {\n  return (\n    <RectButton style={[styles.option, isLastOption && styles.lastOption]} onPress={onPress}>\n      <View style={{ flexDirection: 'row' }}>\n        <View style={styles.optionIconContainer}>\n          <Ionicons name={icon} size={22} color=\"rgba(0,0,0,0.35)\" />\n        </View>\n        <View style={styles.optionTextContainer}>\n          <Text style={styles.optionText}>{label}</Text>\n        </View>\n      </View>\n    </RectButton>\n  );\n}\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fafafa',\n  },\n  contentContainer: {\n    paddingTop: 15,\n  },\n  optionIconContainer: {\n    marginRight: 12,\n  },\n  titleText: {\n    marginTop: 30,\n    marginBottom: 30,\n    fontSize: 36,\n    textAlign: 'center',\n  },\n  option: {\n    backgroundColor: '#fdfdfd',\n    paddingHorizontal: 15,\n    paddingVertical: 15,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderBottomWidth: 0,\n    borderColor: '#ededed',\n  },\n  lastOption: {\n    borderBottomWidth: StyleSheet.hairlineWidth,\n  },\n  optionText: {\n    fontSize: 15,\n    alignSelf: 'flex-start',\n    marginTop: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}