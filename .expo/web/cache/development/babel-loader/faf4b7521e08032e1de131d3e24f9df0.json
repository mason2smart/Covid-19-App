{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/laurachicos/Desktop/COVID/screens/VentilationScreen.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { ventilators } from \"../../data/dataArrays\";\nimport React, { Component } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { ScrollView } from 'react-native-gesture-handler';\n\nvar VentilationScreen = function (_React$Component) {\n  _inherits(VentilationScreen, _React$Component);\n\n  var _super = _createSuper(VentilationScreen);\n\n  function VentilationScreen(props) {\n    var _this;\n\n    _classCallCheck(this, VentilationScreen);\n\n    _this = _super.call(this, props);\n\n    _this.onPressVentilator = function (item) {\n      var title = item.name;\n      var ventilator = item;\n    };\n\n    _this.renderVentilator = function (_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableHighlight, {\n        underlayColor: \"rgba(73,182,77,1,0.9)\",\n        onPress: function onPress() {\n          return _this.onPressVentilator(item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 5\n        }\n      }, React.createElement(View, {\n        style: styles.ventilatorsItemContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }\n      }, React.createElement(Image, {\n        style: styles.ventilatorsPhoto,\n        source: {\n          uri: item.photo_url\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: styles.ventilatorsName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      }, item.name)));\n    };\n\n    return _this;\n  }\n\n  _createClass(VentilationScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }\n      }, React.createElement(FlatList, {\n        data: ventilators,\n        renderItem: this.renderVentilator,\n        keyExtractor: function keyExtractor(item) {\n          return \"\" + item.id;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return VentilationScreen;\n}(React.Component);\n\nVentilationScreen.navigationOptions = {\n  title: 'Ventilators'\n};\nexport { VentilationScreen as default };\nvar styles = StyleSheet.create({\n  ventilatorsItemContainer: {\n    flex: 1,\n    margin: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 215,\n    borderColor: '#cccccc',\n    borderWidth: 0.5,\n    borderRadius: 20\n  },\n  ventilatorsPhoto: {\n    width: '100%',\n    height: 155,\n    borderRadius: 20,\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n    shadowColor: 'blue',\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    shadowRadius: 5,\n    shadowOpacity: 1.0,\n    elevation: 3\n  },\n  ventilatorsName: {\n    flex: 1,\n    fontSize: 20,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    color: '#333333',\n    marginTop: 8\n  },\n  ventilatorsInfo: {\n    marginTop: 3,\n    marginBottom: 5\n  }\n});","map":{"version":3,"sources":["/Users/laurachicos/Desktop/COVID/screens/VentilationScreen.js"],"names":["ventilators","React","Component","NavigationContainer","ScrollView","VentilationScreen","props","onPressVentilator","item","title","name","ventilator","renderVentilator","styles","ventilatorsItemContainer","ventilatorsPhoto","uri","photo_url","ventilatorsName","id","navigationOptions","StyleSheet","create","flex","margin","justifyContent","alignItems","height","borderColor","borderWidth","borderRadius","width","borderBottomLeftRadius","borderBottomRightRadius","shadowColor","shadowOffset","shadowRadius","shadowOpacity","elevation","fontSize","fontWeight","textAlign","color","marginTop","ventilatorsInfo","marginBottom"],"mappings":"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","sourcesContent":["import { ventilators } from '../../data/dataArrays';\nimport React, {Component} from 'react';\nimport { FlatList, TouchableHighlight, Image, Button, Platform, StyleSheet, Text, View, Alert, TouchableOpacity} from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { ScrollView } from 'react-native-gesture-handler';\n\nexport default class VentilationScreen extends React.Component {\n  static navigationOptions = {\n    title: 'Ventilators'\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPressVentilator = item => {\n    const title = item.name;\n    const ventilator = item;\n  };\n\n  renderVentilator = ({ item }) => (\n    <TouchableHighlight underlayColor='rgba(73,182,77,1,0.9)' onPress={() => this.onPressVentilator(item)}>\n      <View style={styles.ventilatorsItemContainer}>\n        <Image style={styles.ventilatorsPhoto} source={{ uri: item.photo_url }} />\n        <Text style={styles.ventilatorsName}>{item.name}</Text>\n      </View>\n    </TouchableHighlight>\n  );\n\n  render() {\n    return (\n      <View>\n        <FlatList\n          data={ventilators}\n          renderItem={this.renderVentilator}\n          keyExtractor={item => `${item.id}`}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  ventilatorsItemContainer: {\n    flex: 1,\n    margin: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 215,\n    borderColor: '#cccccc',\n    borderWidth: 0.5,\n    borderRadius: 20,\n  },\n  ventilatorsPhoto: {\n    width: '100%',\n    height: 155,\n    borderRadius: 20,\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n    shadowColor: 'blue',\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    shadowRadius: 5,\n    shadowOpacity: 1.0,\n    elevation: 3\n  },\n  ventilatorsName: {\n    flex: 1,\n    fontSize: 20,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    color: '#333333',\n    marginTop: 8\n  },\n  ventilatorsInfo: {\n    marginTop: 3,\n    marginBottom: 5\n  }\n});"]},"metadata":{},"sourceType":"module"}