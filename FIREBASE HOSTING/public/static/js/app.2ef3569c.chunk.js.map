{"version":3,"sources":["assets/images/clinician.png","assets/images/ventilator.png","constants/Colors.js","components/TabBarIcon.js","screens/HomeScreen.js","screens/LinksScreen.js","navigation/BottomTabNavigator.js","components/MyButton.js","config.js","screens/ClinicianScreen.js","screens/PPEScreen.js","screens/ResourcesScreen.js","components/Screen.js","components/ContentScreen.js","components/MyButtonVent.js","components/VentilationScreen.js","components/Ventilator.js","App.js","navigation/useLinking.js","web-build/register-service-worker.js","assets/images/splash.png","assets/images/PPE.png","assets/fonts/SpaceMono-Regular.ttf"],"names":["module","exports","TabBarIcon","props","Ionicons","name","size","style","marginBottom","color","focused","Colors","HomeScreen","navigation","View","styles","container","contentContainerStyle","contentContainer","titleContainer","Image","source","require","titleImage","Text","titleText","buttonContainer","TouchableOpacity","buttonStyle","onPress","navigate","buttonIcon","buttonText","marginLeft","StyleSheet","create","flex","backgroundColor","marginTop","fontSize","textAlign","width","height","resizeMode","flexDirection","marginVertical","alignItems","justifyContent","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","paddingTop","tabBarInfoContainer","position","bottom","left","right","Platform","select","ios","android","paddingVertical","tabBarInfoText","LinksScreen","optionText","optionIconContainer","marginRight","option","paddingHorizontal","borderWidth","hairlineWidth","borderBottomWidth","borderColor","lastOption","alignSelf","BottomTab","createBottomTabNavigator","BottomTabNavigator","route","setOptions","headerTitle","getHeaderTitle","Navigator","initialRouteName","Screen","component","options","title","tabBarIcon","state","routes","index","MyButton","useNavigation","content","data","app","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","storage","database","colors","ClinicianScreen","useState","cprData","setData","useEffect","a","async","ref","once","snapshot","val","console","warn","getData","buttonList","i","Object","entries","map","key","replace","push","createButtons","PPEScreen","ResourcesScreen","subtitleText","icon","label","WebBrowser","isLastOption","OptionButton","optionTextContainer","fontWeight","marginHorizontal","params","path","concat","value","ContentScreen","text","padding","MyButtonVent","VentilationScreen","ventPicSrc","consoleLog","log","Ventilator","namePath","split","join","child","getDownloadURL","then","url","fetchQRGuidePic","margin","transform","scale","uri","Video","rate","volume","isMuted","useNativeControls","paddingBottom","Stack","createStackNavigator","App","React","isLoadingComplete","setLoadingComplete","initialNavigationState","setInitialNavigationState","containerRef","getInitialState","useLinking","prefixes","Linking","makeUrl","config","Root","screens","Home","Links","Settings","SplashScreen","preventAutoHide","Font","font","hide","OS","StatusBar","barStyle","skipLoadingScreen","NavigationContainer","initialState","navigator","window","addEventListener","serviceWorker","register","scope","info","catch","error"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,0LCE5B,EAEG,OAFH,EAFG,UCKH,SAASC,EAAWC,GACjC,OACE,gBAACC,EAAA,EAAD,CACEC,KAAMF,EAAME,KACZC,KAAM,GACNC,MAAO,CAAEC,cAAe,GACxBC,MAAON,EAAMO,QAAUC,EAAyBA,I,kQCHvC,SAASC,EAAT,GAAmC,IAAdC,EAAa,EAAbA,WAClC,OACE,gBAACC,EAAA,EAAD,CAAMP,MAAOQ,EAAOC,WAClB,gBAAC,IAAD,CAAYT,MAAOQ,EAAOC,UAAWC,sBAAuBF,EAAOG,kBACjE,gBAACJ,EAAA,EAAD,CAAMP,MAAOQ,EAAOI,gBAClB,gBAACC,EAAA,EAAD,CACEC,OAAQC,EAAQ,KAChBf,MAAOQ,EAAOQ,aAEhB,gBAACC,EAAA,EAAD,CAAMjB,MAAOQ,EAAOU,WAApB,YACY,KADZ,oBAIA,gBAACX,EAAA,EAAD,CAAMP,MAAOQ,EAAOW,iBACpB,gBAACC,EAAA,EAAD,CACEpB,MAAOQ,EAAOa,YACdC,QAAS,kBAAMhB,EAAWiB,SAAS,gCAEnC,gBAACV,EAAA,EAAD,CACEC,OAAQC,EAAQ,KAChBf,MAAOQ,EAAOgB,aAEhB,gBAACP,EAAA,EAAD,CAAMjB,MAAOQ,EAAOiB,YAApB,wBAGF,gBAACL,EAAA,EAAD,CACEpB,MAAOQ,EAAOa,YACdC,QAAS,kBAAMhB,EAAWiB,SAAS,iBAEnC,gBAACV,EAAA,EAAD,CACEC,OAAQC,EAAQ,KAChBf,MAAOQ,EAAOgB,aAEhB,gBAACP,EAAA,EAAD,CAAMjB,MAAOQ,EAAOiB,YAApB,gBAGF,gBAACL,EAAA,EAAD,CACEpB,MAAOQ,EAAOa,YACdC,QAAS,kBAAMhB,EAAWiB,SAAS,SAEnC,gBAACV,EAAA,EAAD,CACEC,OAAQC,EAAQ,KAChBf,MAAOQ,EAAOgB,aAEhB,gBAACP,EAAA,EAAD,CAAMjB,MAAOQ,EAAOiB,YAApB,cAGF,gBAACL,EAAA,EAAD,CACEpB,MAAOQ,EAAOa,YACdC,QAAS,kBAAMhB,EAAWiB,SAAS,eAEnC,gBAAC1B,EAAA,EAAD,CACEC,KAAM,gCACNC,KAAM,GACNC,MAAO,CAAC0B,WAAY,KAEtB,gBAACT,EAAA,EAAD,CAAMjB,MAAOQ,EAAOiB,YAApB,kBAUZ,IAAMjB,EAASmB,IAAWC,OAAO,CAC/BnB,UAAW,CACToB,KAAM,EACNC,gBAAiB,QAEnBZ,UAAW,CACTa,UAAW,GACX9B,aAAc,GACd+B,SAAU,GACVC,UAAW,UAEbd,gBAAiB,GAEjBK,WAAW,CACTU,MAAM,GACNC,OAAO,GACPC,WAAY,WAEdf,YAAa,CACXgB,cAAe,MACfC,eAAgB,EAChBC,WAAW,SACXC,eAAe,SACfN,MAAM,IACNC,OAAO,GACPL,gBAAiB,UACjBW,aAAa,GACbC,YAAa,kBACbC,aAAc,CAAER,OAAQ,EAAGD,MAAO,GAClCU,cAAe,EACfC,aAAc,EACdC,UAAW,GAEbrB,WAAY,CACVO,SAAU,GACVN,WAAY,IAEdf,iBAAkB,CAChBoC,WAAY,GAEdnC,eAAgB,CACd2B,WAAY,SACZR,UAAW,GACX9B,aAAc,IAEhBe,WAAY,CACVkB,MAAO,IACPC,OAAQ,IACRC,WAAY,UACZL,UAAW,EACXL,YAAa,IAEfsB,oB,iWAAoB,CAAD,CACjBC,SAAU,WACVC,OAAQ,EACRC,KAAM,EACNC,MAAO,GACJC,IAASC,OAAO,CACjBC,IAAK,CACHb,YAAa,QACbC,aAAc,CAAET,MAAO,EAAGC,QAAS,GACnCS,cAAe,GACfC,aAAc,GAEhBW,QAAS,CACPV,UAAW,MAbE,CAgBjBP,WAAY,SACZT,gBAAiB,UACjB2B,gBAAiB,KAEnBC,eAAgB,CACd1B,SAAU,GACV9B,MAAO,sBACP+B,UAAW,YC/IA,SAAS0B,IACtB,OACE,gBAAC,IAAD,CAAY3D,MAAOQ,EAAOC,UAAWC,sBAAuBF,EAAOG,kBAOnE,gBAACM,EAAA,EAAD,CAAMjB,MAAOQ,EAAOU,WAApB,SAIA,gBAACD,EAAA,EAAD,CAAMjB,MAAOQ,EAAOoD,YAApB,gEAC0D,KAD1D,IACiE,KADjE,mHAGH,KAAM,KAHH,kJA2BJ,IAAMpD,EAASmB,IAAWC,OAAO,CAC/BnB,UAAW,CACToB,KAAM,EACNC,gBAAiB,WAEnBnB,iBAAkB,CAChBoC,WAAY,IAEdc,oBAAqB,CACnBC,YAAa,IAEf5C,UAAW,CACTa,UAAW,GACX9B,aAAc,GACd+B,SAAU,GACVC,UAAW,UAEb8B,OAAQ,CACNjC,gBAAiB,UACjBkC,kBAAmB,GACnBP,gBAAiB,GACjBQ,YAAatC,IAAWuC,cACxBC,kBAAmB,EACnBC,YAAa,WAEfC,WAAY,CACVF,kBAAmBxC,IAAWuC,eAEhCN,WAAY,CACV5B,SAAU,GACVsC,UAAW,aACXvC,UAAW,EACXiC,kBAAmB,MCvEjBO,EAAYC,cAGH,SAASC,EAAT,GAAoD,IAAtBnE,EAAqB,EAArBA,WAAYoE,EAAS,EAATA,MAMvD,OAFApE,EAAWqE,WAAW,CAAEC,YAAaC,EAAeH,KAGlD,gBAACH,EAAUO,UAAX,CAAqBC,iBATE,QAUrB,gBAACR,EAAUS,OAAX,CACElF,KAAK,OACLmF,UAAW5E,EACX6E,QAAS,CACPC,MAAO,OACPC,WAAY,gBAAGjF,EAAH,EAAGA,QAAH,OAAiB,gBAACR,EAAD,CAAYQ,QAASA,EAASL,KAAK,gBAGpE,gBAACyE,EAAUS,OAAX,CACElF,KAAK,YACLmF,UAAWtB,EACXuB,QAAS,CACPC,MAAO,QACPC,WAAY,gBAAGjF,EAAH,EAAGA,QAAH,OAAiB,gBAACR,EAAD,CAAYQ,QAASA,EAASL,KAAK,iBAO1E,SAAS+E,EAAeH,GAAQ,IAAD,MAG7B,OAFe,kBAAGA,EAAMW,QAAT,SAAG,EAAaC,OAAOZ,EAAMW,MAAME,aAAnC,EAAG,EAAwCzF,MAA3C,EA/BU,QAkCvB,IAAK,OACH,MAAO,GACT,IAAK,YACH,MAAO,8B,8BCzCE,SAAS0F,EAAS5F,GAC/B,IAAMU,EAAamF,0BAEnB,OACE,kBAACrE,EAAA,EAAD,CACEpB,MAAO,CAAC,CAAE8B,gBAAiBlC,EAAMM,OAASM,EAAOa,aACjDC,QAAS,WACH1B,EAAM8F,QACNpF,EAAWiB,SAAS,gBAAiB,CACjCzB,KAAMF,EAAME,KACZ6F,KAAM/F,EAAM+F,OAGhBrF,EAAWiB,SAAS,YAAa,CAC7BzB,KAAMF,EAAME,KACZ6F,KAAM/F,EAAM+F,KACZzF,MAAON,EAAMM,UAKvB,kBAACe,EAAA,EAAD,CAAMjB,MAAOQ,EAAOiB,YAAa7B,EAAME,OAI7C,IAAMU,EAASmB,IAAWC,OAAO,CAC/BP,YAAa,CACXgB,cAAe,MACfC,eAAgB,EAChBC,WAAY,SACZC,eAAgB,SAChBN,MAAO,IACPC,OAAQ,GACRM,aAAc,GACdC,YAAa,kBACbC,aAAc,CAAER,OAAQ,EAAGD,MAAO,GAClCU,cAAe,EACfC,aAAc,EACdC,UAAW,GAEbrB,WAAY,CACVuC,kBAAmB,GACnB9D,MAAO,UACP8B,SAAU,MClCD4D,E,OAAMC,cAXI,CACrBC,OAAQ,0CACRC,WAAY,+CACZC,YAAa,sDACbC,UAAW,+BACXC,cAAe,2CACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iBAKJC,GADaV,EAAIW,UACZX,EAAIY,YCTlBC,EAAS,CAAC,UAAW,UAAW,WAErB,SAASC,EAAT,GAAyC,EAAdpG,WAAe,IAAD,EAC3BqG,mBAAS,IADkB,WAC/CC,EAD+C,KACtCC,EADsC,KA+BtD,OAjBAC,qBAAU,YAXV,qBAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAE2BT,EAAGW,IAAI,eAAeC,KAAK,UAFtD,OAEUC,EAFV,OAGQxB,EAAOwB,EAASC,MACpBP,EAAQlB,GAJZ,gDAQI0B,QAAQC,KAAR,MARJ,gEAYEC,KACC,IAgBD,kBAAChH,EAAA,EAAD,CAAMP,MAAOQ,EAAOC,WAClB,kBAAC,IAAD,CAAYT,MAAOQ,EAAOC,WACxB,kBAACF,EAAA,EAAD,CAAMP,MAAOQ,EAAOI,gBAClB,kBAACK,EAAA,EAAD,CAAMjB,MAAOQ,EAAOU,WAApB,aACa,KADb,qBAGA,kBAACL,EAAA,EAAD,CACEC,OAAQC,EAAQ,KAChBf,MAAOQ,EAAOQ,aAtBxB,WACE,IAAIwG,EAAa,GACbC,EAAI,EAQR,OAPAC,OAAOC,QAAQf,GAASgB,KAAI,YAAmB,IAAD,WAAhBC,EAAgB,KACxC/H,GADwC,KACjC+H,EAAIC,QAAQ,KAAM,MAC7BN,EAAWO,KACT,kBAACvC,EAAD,CAAU1F,KAAMA,EAAMI,MAAOuG,EAAOgB,EAAI,GAAI9B,KAAMkC,EAAKA,IAAKA,EAAKnC,SAAW,KAE9E+B,GAAQ,KAEHD,EAcAQ,MAQX,IAAMxH,EAASmB,IAAWC,OAAO,CAC/BnB,UAAW,CACToB,KAAM,EACNC,gBAAiB,QAEnBlB,eAAgB,CACd2B,WAAY,SACZR,UAAW,GACX9B,aAAc,IAEhBiB,UAAW,CACTa,UAAW,GACX9B,aAAc,GACd+B,SAAU,GACVC,UAAW,UAEbjB,WAAY,CACVkB,MAAO,IACPC,OAAQ,IACRC,WAAY,aCxED,SAAS6F,EAAT,GAAiC,EAAb3H,WACjC,OACE,gBAACC,EAAA,EAAD,KACI,gBAACU,EAAA,EAAD,oC,aCFO,SAASiH,IACtB,OAEE,gBAAC,IAAD,CAAYlI,MAAOQ,EAAOC,UAAWC,sBAAuBF,EAAOG,kBACnE,gBAACM,EAAA,EAAD,CAAMjB,MAAOQ,EAAOU,WAApB,aACA,gBAACD,EAAA,EAAD,CAAMjB,MAAOQ,EAAO2H,cAApB,gBACE,gBAAC,EAAD,CACEC,KAAK,YACLC,MAAM,8DACN/G,QAAS,kBAAMgH,IAA4B,4CAE7C,gBAAC,EAAD,CACEF,KAAK,YACLC,MAAM,4CACN/G,QAAS,kBAAMgH,IAA4B,yBAC3CC,cAAY,IAGhB,gBAACtH,EAAA,EAAD,CAAMjB,MAAOQ,EAAO2H,cAApB,YACA,gBAAC,EAAD,CACIC,KAAK,YACLC,MAAM,0BACN/G,QAAS,kBAAMgH,IAA4B,oHAC3CC,cAAY,KAOpB,SAASC,EAAT,GAA+D,IAAvCJ,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAO/G,EAAyB,EAAzBA,QAASiH,EAAgB,EAAhBA,aAC5C,OACE,gBAAC,IAAD,CAAYvI,MAAO,CAACQ,EAAOuD,OAAQwE,GAAgB/H,EAAO6D,YAAa/C,QAASA,GAC9E,gBAACf,EAAA,EAAD,CAAMP,MAAO,CAAEqC,cAAe,QAC5B,gBAAC9B,EAAA,EAAD,CAAMP,MAAOQ,EAAOqD,qBAClB,gBAAChE,EAAA,EAAD,CAAUC,KAAMsI,EAAMrI,KAAM,GAAIG,MAAM,sBAExC,gBAACK,EAAA,EAAD,CAAMP,MAAOQ,EAAOiI,qBAClB,gBAACxH,EAAA,EAAD,CAAMjB,MAAOQ,EAAOoD,YAAayE,MAS3C,IAAM7H,EAASmB,IAAWC,OAAO,CAC/BnB,UAAW,CACToB,KAAM,EACNC,gBAAiB,WAEnBnB,iBAAkB,CAChBoC,WAAY,IAEdc,oBAAqB,CACnBC,YAAa,IAEf5C,UAAW,CACTjB,aAAc,GACd+B,SAAU,GACVC,UAAW,SACXyG,WAAY,QAEdP,aAAc,CACZQ,iBAAkB,GAClB1I,aAAc,GACd+B,SAAU,GACVsC,UAAW,aACXoE,WAAY,QAEd3E,OAAQ,CACNjC,gBAAiB,UACjBkC,kBAAmB,GACnBP,gBAAiB,GACjBQ,YAAatC,IAAWuC,cACxBC,kBAAmB,EACnBC,YAAa,WAEfC,WAAY,CACVF,kBAAmBxC,IAAWuC,cAC9BjE,aAAc,IAEhB2D,WAAY,CACV5B,SAAU,GACVsC,UAAW,aACXvC,UAAW,EACXiC,kBAAmB,MCtFR,SAASgB,EAAT,GAAwC,IAAtBN,EAAqB,EAArBA,MACvB5E,GAD4C,EAAdQ,WACrBoE,EAAMkE,OAAf9I,MACA6F,EAASjB,EAAMkE,OAAfjD,KACAzF,EAAUwE,EAAMkE,OAAhB1I,MAH4C,EAKzByG,mBAAS,IALgB,WAK7CC,EAL6C,KAKpCC,EALoC,KAgCpD,OAfAC,qBAAU,YAVV,uBAAAC,EAAAC,OAAA,uDACQ6B,EAAO,GAAGC,OAAO,OAAQnD,GADjC,oBAAAoB,EAAA,MAG2BT,EAAGW,IAAI4B,GAAM3B,KAAK,UAH7C,OAGUC,EAHV,OAIQxB,EAAOwB,EAASC,MACpBP,EAAQlB,GALZ,gDAOI0B,QAAQC,KAAR,MAPJ,gEAWEC,KACC,IAcD,kBAAChH,EAAA,EAAD,CAAMP,MAAOQ,EAAOC,WAClB,kBAAC,IAAD,CAAYT,MAAOQ,EAAOC,WACxB,kBAACF,EAAA,EAAD,CAAMP,MAAOQ,EAAOI,gBAClB,kBAACK,EAAA,EAAD,CAAMjB,MAAOQ,EAAOU,WACjBpB,GAhBX,WACE,IAAI0H,EAAa,GAOjB,OALAE,OAAOC,QAAQf,GAASgB,KAAI,YAAmB,IAAD,WAAhBC,EAAgB,KAAXkB,EAAW,KACtC5D,EAAQ0C,EAAIC,QAAQ,KAAM,KAC9BN,EAAWO,KAAK,kBAACvC,EAAD,CAAU1F,KAAMqF,EAAOQ,KAAQoD,EAAO7I,MAAOA,EAAO2H,IAAKA,EAAKnC,SAAS,KAC/E,KAEL8B,EAUAQ,MAQX,IAAMxH,EAASmB,IAAWC,OAAO,CAC/BnB,UAAW,CACToB,KAAM,EACNC,gBAAiB,QAEnBlB,eAAgB,CACd2B,WAAY,SACZR,UAAW,GACX9B,aAAc,IAEhBiB,UAAW,CACTa,UAAW,GACX9B,aAAc,GACd+B,SAAU,GACVC,UAAW,UAEbjB,WAAY,CACVkB,MAAO,IACPC,OAAQ,IACRC,WAAY,aCpED,SAAS4G,EAAT,GAAmC,IAAVtE,EAAS,EAATA,MAC9B5E,EAAS4E,EAAMkE,OAAf9I,KACA6F,EAASjB,EAAMkE,OAAfjD,KAER,OACE,kBAACpF,EAAA,EAAD,CAAMP,MAAOQ,GAAOC,WAClB,kBAAC,IAAD,CAAYT,MAAOQ,GAAOC,WACxB,kBAACF,EAAA,EAAD,CAAMP,MAAOQ,GAAOI,gBAClB,kBAACK,EAAA,EAAD,CAAMjB,MAAOQ,GAAOU,WACjBpB,GAEH,kBAACmB,EAAA,EAAD,CAAMjB,MAASQ,GAAOyI,MACjBtD,MASf,IAAMnF,GAASmB,IAAWC,OAAO,CAC/BnB,UAAW,CACToB,KAAM,EACNC,gBAAiB,QAEnBlB,eAAgB,CACd2B,WAAY,SACZR,UAAW,GACX9B,aAAc,GACdiJ,QAAS,IAEXhI,UAAW,CACTa,UAAW,GACX9B,aAAc,GACd+B,SAAU,GACVC,UAAW,UAEbjB,WAAY,CACVkB,MAAO,IACPC,OAAQ,IACRC,WAAY,WAEd6G,KAAM,CACFjH,SAAU,MC7CD,SAASmH,GAAavJ,GACnC,IAAMU,EAAamF,0BAEnB,OACE,kBAACrE,EAAA,EAAD,CACEpB,MAAO,CAAC,CAAE8B,gBAAiBlC,EAAMM,OAASM,GAAOa,aACjDC,QAAS,WACHhB,EAAWiB,SAAS,aAAc,CAC9BzB,KAAMF,EAAME,KACZ6F,KAAM/F,EAAM+F,SAMtB,kBAAC1E,EAAA,EAAD,CAAMjB,MAAOQ,GAAOiB,YAAa7B,EAAME,OAI7C,IAAMU,GAASmB,IAAWC,OAAO,CAC/BP,YAAa,CACXgB,cAAe,MACfC,eAAgB,EAChBC,WAAY,SACZC,eAAgB,SAChBN,MAAO,IACPC,OAAQ,GACRM,aAAc,GACdC,YAAa,kBACbC,aAAc,CAAER,OAAQ,EAAGD,MAAO,GAClCU,cAAe,EACfC,aAAc,EACdC,UAAW,GAEbrB,WAAY,CACVuC,kBAAmB,GACnB9D,MAAO,UACP8B,SAAU,MCnCVyE,GAAS,CAAC,UAAW,UAAW,WAErB,SAAS2C,GAAT,GAA2C,EAAd9I,WAAe,IAAD,EAC7BqG,mBAAS,IADoB,WACjDC,EADiD,KACxCC,EADwC,KA+BxD,OAjBAC,qBAAU,YAXV,qBAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAE2BT,EAAGW,IAAI,0BAA0BC,KAAK,UAFjE,OAEUC,EAFV,OAGQxB,EAAOwB,EAASC,MACpBP,EAAQlB,GAJZ,gDAQI0B,QAAQC,KAAR,MARJ,gEAYEC,KACC,IAgBD,kBAAChH,EAAA,EAAD,CAAMP,MAAOQ,GAAOC,WAClB,kBAAC,IAAD,CAAYT,MAAOQ,GAAOC,WACxB,kBAACF,EAAA,EAAD,CAAMP,MAAOQ,GAAOI,gBAClB,kBAACK,EAAA,EAAD,CAAMjB,MAAOQ,GAAOU,WAApB,oBACoB,KADpB,aAGA,kBAACL,EAAA,EAAD,CACEC,OAAQC,EAAQ,KAChBf,MAAOQ,GAAOQ,aAtBxB,WACE,IAAIwG,EAAa,GACbC,EAAI,EAQR,OAPAC,OAAOC,QAAQf,GAASgB,KAAI,YAAmB,IAAD,WAAhBC,EAAgB,KACxC/H,GADwC,KACjC+H,EAAIC,QAAQ,KAAM,MAC7BN,EAAWO,KACT,kBAACoB,GAAD,CAAcrJ,KAAMA,EAAMI,MAAOuG,GAAOgB,EAAI,GAAI9B,KAAMkC,EAAKA,IAAKA,KAElEJ,GAAQ,KAEHD,EAcAQ,MAQX,ICzCIqB,GDyCE7I,GAASmB,IAAWC,OAAO,CAC/BnB,UAAW,CACToB,KAAM,EACNC,gBAAiB,QAEnBlB,eAAgB,CACd2B,WAAY,SACZR,UAAW,GACX9B,aAAc,IAEhBiB,UAAW,CACTa,UAAW,GACX9B,aAAc,GACd+B,SAAU,GACVC,UAAW,UAEbjB,WAAY,CACVkB,MAAO,IACPC,OAAQ,IACRC,WAAY,a,UClEhB,SAASkH,GAAWxJ,GACnBuH,QAAQkC,IAAIzJ,GAOE,SAAS0J,GAAT,GAA8B,IAAT9E,EAAQ,EAARA,MAC1B5E,EAAS4E,EAAMkE,OAAf9I,KAEF2J,GADW/E,EAAMkE,OAAfjD,KACU7F,EAAK4J,MAAM,KAAKC,KAAK,KAAO,oBAW9C,OARAL,GAAWxJ,GACXwJ,GAAW5E,GACX4E,GAAWG,GAkCb,SAA0BA,GACV7D,EAAIW,UAAUU,IAAI,yBACV2C,MAAMH,GACpBI,iBAAiBC,MAAK,SAASC,GACvCV,GAAaU,EAGbT,GAAW,kBACXA,GAAWD,OAxCXW,CAAgBP,GAKd,gBAAClJ,EAAA,EAAD,CAAMP,MAASQ,GAAOC,WAClB,gBAAC,IAAD,KACE,gBAACQ,EAAA,EAAD,CAAMjB,MAAOQ,GAAOU,WAApB,IAAiCpB,EAAO,yBAAxC,KAEA,gBAACe,EAAA,EAAD,CACEb,MAAO,CAAEkC,MAAO,IAAKC,OAAQ,IAAKmC,UAAW,SAAU2F,OAAQ,GAAIC,UAAW,CAAC,CAAEC,MAAO,KACxFrJ,OAAQ,CAACsJ,IAAKf,MAId,gBAACpI,EAAA,EAAD,CAAMjB,MAAOQ,GAAO2H,eACpB,gBAAClH,EAAA,EAAD,CAAMjB,MAAOQ,GAAO2H,cAApB,kBACA,gBAACkC,GAAA,EAAD,CACEvJ,OAAQ,CAAEsJ,IAAK,+CACfE,KAAM,EACNC,OAAQ,EACRC,SAAS,EACTpI,WAAW,UACXqI,mBAAmB,EACnBzK,MAAO,CAAEkC,MAAO,IAAKC,OAAQ,IAAMmC,UAAW,cAmB5D,IAAM9D,GAASmB,IAAWC,OAAO,CAC/BnB,UAAW,CACToB,KAAM,EACNC,gBAAiB,SAEnBZ,UAAW,CACTa,UAAW,GACX9B,aAAc,GACd+B,SAAU,GACVC,UAAW,UAEbkG,aAAc,CACZnG,SAAU,GAEV0I,cAAe,GACfpG,UAAW,Y,wmBCjEf,IAAMqG,GAAQC,cAEC,SAASC,GAAIjL,GAAQ,IAAD,EACekL,YAAe,GAD9B,WAC1BC,EAD0B,KACPC,EADO,OAE2BF,aAF3B,WAE1BG,EAF0B,KAEFC,EAFE,KAG3BC,EAAeL,WACbM,ECzBK,SAASD,GACtB,OAAOE,YAAWF,EAAc,CAC9BG,SAAU,CAACC,IAAQC,QAAQ,MAC3BC,OAAQ,CACNC,KAAM,CACJ7C,KAAM,OACN8C,QAAS,CACPC,KAAM,OACNC,MAAO,QACPC,SAAU,gBDgBUT,CAAWF,GAA/BC,gBA8BR,OA3BAN,aAAgB,WACd,EAAA/D,EAAAC,OAAA,gEAEI+E,IAAaC,kBAFjB,KAKId,EALJ,WAAAnE,EAAA,MAKoCqE,KALpC,oDAAArE,EAAA,MAQUkF,IAAA,MACDpM,IAASqM,KADR,CAEJ,aAAcnL,EAAQ,SAV5B,yDAcIsG,QAAQC,KAAR,MAdJ,yBAgBI0D,GAAmB,GACnBe,IAAaI,OAjBjB,sFAsBC,IAEa,QAAhB9I,IAAS+I,IAAgB,gBAACC,EAAA,EAAD,CAAWC,SAAS,YAExCvB,GAAsBnL,EAAM2M,kBAI7B,gBAAChM,EAAA,EAAD,CAAMP,MAAOQ,GAAOC,WACjB,gBAAC4L,EAAA,EAAD,CAAWC,SAAS,YACrB,gBAACE,EAAA,EAAD,CACEvF,IAAKkE,EACLsB,aAAcxB,GAEd,gBAACN,GAAM7F,UAAP,KACE,gBAAC6F,GAAM3F,OAAP,CAAclF,KAAK,OAAOmF,UAAWR,IAErC,gBAACkG,GAAM3F,OAAP,CACElF,KAAK,6BACLmF,UAAWyB,EACXxB,QAAS,CACPC,MAAO,QAGX,gBAACwF,GAAM3F,OAAP,CACElF,KAAK,cACLmF,UAAWmE,GACXlE,QAAS,CACPC,MAAO,QAGX,gBAACwF,GAAM3F,OAAP,CACElF,KAAK,MACLmF,UAAWgD,EACX/C,QAAS,CACPC,MAAO,QAGX,gBAACwF,GAAM3F,OAAP,CACElF,KAAK,YACLmF,UAAWiD,EACXhD,QAAS,CACPC,MAAO,QAGX,gBAACwF,GAAM3F,OAAP,CACElF,KAAK,YACLmF,UAAWD,EACXE,QAAS,CACPC,MAAO,QAGX,gBAACwF,GAAM3F,OAAP,CACElF,KAAK,gBACLmF,UAAW+D,EACX9D,QAAS,CACPC,MAAO,QAGX,gBAACwF,GAAM3F,OAAP,CACElF,KAAK,aACLmF,UAAWmE,GACXlE,QAAS,CACPC,MAAO,QAGX,gBAACwF,GAAM3F,OAAP,CACElF,KAAK,aACLmF,UAAWuE,GACXtE,QAAS,CACPC,MAAO,WAjEZ,KA2EX,IAAM3E,GAASmB,IAAWC,OAAO,CAC/BnB,UAAW,CACToB,KAAM,EACNC,gBAAiB,W,+DEvIjB,kBAAmB4K,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7CjD,MAAK,SAASkD,OAGdC,OAAM,SAASC,GACd7F,QAAQ2F,KAAK,oCAAqCE,U,oBCV1DzN,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,kC","file":"static/js/app.2ef3569c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clinician.ef06a45b.png\";","module.exports = __webpack_public_path__ + \"static/media/ventilator.2916251d.png\";","const tintColor = '#2f95dc';\r\n\r\nexport default {\r\n  tintColor,\r\n  tabIconDefault: '#ccc',\r\n  tabIconSelected: tintColor,\r\n  tabBar: '#fefefe',\r\n  errorBackground: 'red',\r\n  errorText: '#fff',\r\n  warningBackground: '#EAEB5E',\r\n  warningText: '#666804',\r\n  noticeBackground: tintColor,\r\n  noticeText: '#fff',\r\n};\r\n","import { Ionicons } from '@expo/vector-icons';\r\nimport * as React from 'react';\r\n\r\nimport Colors from '../constants/Colors';\r\n\r\nexport default function TabBarIcon(props) {\r\n  return (\r\n    <Ionicons\r\n      name={props.name}\r\n      size={30}\r\n      style={{ marginBottom: -3 }}\r\n      color={props.focused ? Colors.tabIconSelected : Colors.tabIconDefault}\r\n    />\r\n  );\r\n}\r\n","import * as WebBrowser from 'expo-web-browser';\r\nimport * as React from 'react';\r\nimport { Image, Button, Platform, StyleSheet, Text, View, Alert, TouchableOpacity} from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\n\r\nexport default function HomeScreen({navigation}) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\r\n        <View style={styles.titleContainer}>\r\n          <Image\r\n            source={require('../assets/images/splash.png')}\r\n            style={styles.titleImage}\r\n          />\r\n          <Text style={styles.titleText}>\r\n            Covid-19 {\"\\n\"}Pocket Reference\r\n          </Text>\r\n\r\n          <View style={styles.buttonContainer}>\r\n          <TouchableOpacity\r\n            style={styles.buttonStyle}\r\n            onPress={() => navigation.navigate('Clinician Pocket Reference')}\r\n          >\r\n            <Image \r\n              source={require('../assets/images/clinician.png')}\r\n              style={styles.buttonIcon}\r\n              />\r\n            <Text style={styles.buttonText}>Clinician Reference</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            style={styles.buttonStyle}\r\n            onPress={() => navigation.navigate('Ventilation')}\r\n          >\r\n            <Image \r\n              source={require('../assets/images/ventilator.png')}\r\n              style={styles.buttonIcon}\r\n            />\r\n            <Text style={styles.buttonText}>Ventilation</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            style={styles.buttonStyle}\r\n            onPress={() => navigation.navigate('PPE')}\r\n          >\r\n            <Image \r\n              source={require('../assets/images/PPE.png')}\r\n              style={styles.buttonIcon}\r\n              />\r\n            <Text style={styles.buttonText}>PPE Usage</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            style={styles.buttonStyle}\r\n            onPress={() => navigation.navigate('Resources')}\r\n          >\r\n            <Ionicons\r\n              name={\"md-information-circle-outline\"}\r\n              size={30}\r\n              style={{marginLeft: 0}}\r\n            />\r\n            <Text style={styles.buttonText}>Resources</Text>\r\n          </TouchableOpacity>  \r\n\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n  titleText: {\r\n    marginTop: 30,\r\n    marginBottom: 30,\r\n    fontSize: 36,\r\n    textAlign: 'center',\r\n  },\r\n  buttonContainer: {\r\n  },\r\n  buttonIcon:{\r\n    width:40,\r\n    height:40,\r\n    resizeMode: 'contain',\r\n  },\r\n  buttonStyle: {\r\n    flexDirection: 'row',\r\n    marginVertical: 8,\r\n    alignItems:'center',\r\n    justifyContent:'center',\r\n    width:300,\r\n    height:70,\r\n    backgroundColor: '#f2f2f2',\r\n    borderRadius:20,\r\n    shadowColor: 'rgba(0,0,0, .4)', // IOS\r\n    shadowOffset: { height: 1, width: 0 }, // IOS\r\n    shadowOpacity: 1, // IOS \r\n    shadowRadius: 1, //IOS\r\n    elevation: 1, // Android\r\n  },\r\n  buttonText: {\r\n    fontSize: 20,\r\n    marginLeft: 20\r\n  },\r\n  contentContainer: {\r\n    paddingTop: 0,\r\n  },\r\n  titleContainer: {\r\n    alignItems: 'center',\r\n    marginTop: 10,\r\n    marginBottom: 20,\r\n  },\r\n  titleImage: {\r\n    width: 200,\r\n    height: 200,\r\n    resizeMode: 'contain',\r\n    marginTop: 3,\r\n    marginLeft: -10,\r\n  },\r\n  tabBarInfoContainer: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    ...Platform.select({\r\n      ios: {\r\n        shadowColor: 'black',\r\n        shadowOffset: { width: 0, height: -3 },\r\n        shadowOpacity: 0.1,\r\n        shadowRadius: 3,\r\n      },\r\n      android: {\r\n        elevation: 20,\r\n      },\r\n    }),\r\n    alignItems: 'center',\r\n    backgroundColor: '#fbfbfb',\r\n    paddingVertical: 20,\r\n  },\r\n  tabBarInfoText: {\r\n    fontSize: 17,\r\n    color: 'rgba(96,100,109, 1)',\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import { Ionicons } from '@expo/vector-icons';\r\nimport * as WebBrowser from 'expo-web-browser';\r\nimport * as React from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { RectButton, ScrollView } from 'react-native-gesture-handler';\r\n\r\nexport default function LinksScreen() {\r\n  return (\r\n    <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\r\n      {/* <OptionButton\r\n        icon=\"md-school\"\r\n        label=\"Read the Expo documentation\"\r\n        onPress={() => WebBrowser.openBrowserAsync('https://docs.expo.io')}\r\n      /> */}\r\n\r\n    <Text style={styles.titleText}>\r\n        About\r\n    </Text>\r\n\r\n    <Text style={styles.optionText}>\r\nThank you for downloading the Covid-19 Pocket Reference App! {'\\n'} {'\\n'}\r\nThis is intended to provide healthcare providers with easily accessible information during the COVID19 pandemic. \r\n{'\\n'}{'\\n'}This app provide resources for clinicians on relevant up-to-date information of COVID19 and hospital protocols for PPE usage and ventilation. \r\n\r\n  </Text>\r\n    </ScrollView>\r\n  )\r\n}\r\n\r\nfunction OptionButton({ icon, label, onPress, isLastOption }) {\r\n  return (\r\n    <RectButton style={[styles.option, isLastOption && styles.lastOption]} onPress={onPress}>\r\n      <View style={{ flexDirection: 'row' }}>\r\n        <View style={styles.optionIconContainer}>\r\n          <Ionicons name={icon} size={22} color=\"rgba(0,0,0,0.35)\" />\r\n        </View>\r\n        <View style={styles.optionTextContainer}>\r\n          <Text style={styles.optionText}>{label}</Text>\r\n        </View>\r\n      </View>\r\n    </RectButton>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fafafa',\r\n  },\r\n  contentContainer: {\r\n    paddingTop: 15,\r\n  },\r\n  optionIconContainer: {\r\n    marginRight: 12,\r\n  },\r\n  titleText: {\r\n    marginTop: 30,\r\n    marginBottom: 30,\r\n    fontSize: 36,\r\n    textAlign: 'center',\r\n  },\r\n  option: {\r\n    backgroundColor: '#fdfdfd',\r\n    paddingHorizontal: 15,\r\n    paddingVertical: 15,\r\n    borderWidth: StyleSheet.hairlineWidth,\r\n    borderBottomWidth: 0,\r\n    borderColor: '#ededed',\r\n  },\r\n  lastOption: {\r\n    borderBottomWidth: StyleSheet.hairlineWidth,\r\n  },\r\n  optionText: {\r\n    fontSize: 15,\r\n    alignSelf: 'flex-start',\r\n    marginTop: 1,\r\n    paddingHorizontal: 15,\r\n  },\r\n});\r\n","import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport * as React from 'react';\r\n\r\nimport TabBarIcon from '../components/TabBarIcon';\r\nimport HomeScreen from '../screens/HomeScreen';\r\nimport LinksScreen from '../screens/LinksScreen';\r\n\r\nconst BottomTab = createBottomTabNavigator();\r\nconst INITIAL_ROUTE_NAME = 'Home';\r\n\r\nexport default function BottomTabNavigator({ navigation, route }) {\r\n  // Set the header title on the parent stack navigator depending on the\r\n  // currently active tab. Learn more in the documentation:\r\n  // https://reactnavigation.org/docs/en/screen-options-resolution.html\r\n  navigation.setOptions({ headerTitle: getHeaderTitle(route) });\r\n\r\n  return (\r\n    <BottomTab.Navigator initialRouteName={INITIAL_ROUTE_NAME}>\r\n      <BottomTab.Screen\r\n        name=\"Home\"\r\n        component={HomeScreen}\r\n        options={{\r\n          title: 'Home',\r\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"md-home\" />,\r\n        }}\r\n      />\r\n      <BottomTab.Screen\r\n        name=\"Clinician\"\r\n        component={LinksScreen}\r\n        options={{\r\n          title: 'About',\r\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"md-book\" />,\r\n        }}\r\n      />\r\n    </BottomTab.Navigator>\r\n  );\r\n}\r\n\r\nfunction getHeaderTitle(route) {\r\n  const routeName = route.state?.routes[route.state.index]?.name ?? INITIAL_ROUTE_NAME;\r\n\r\n  switch (routeName) {\r\n    case 'Home':\r\n      return '';\r\n    case 'Clinician':\r\n      return 'Clinician Pocket Reference';\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\r\n\r\nexport default function MyButton(props) {\r\n  const navigation = useNavigation();\r\n \r\n  return (\r\n    <TouchableOpacity\r\n      style={[{ backgroundColor: props.color }, styles.buttonStyle]}\r\n      onPress={() => {\r\n        if (props.content) {\r\n            navigation.navigate('Contentscreen', {\r\n                name: props.name, \r\n                data: props.data,\r\n            });        \r\n        } else {\r\n            navigation.navigate('Subscreen', {\r\n                name: props.name, \r\n                data: props.data, \r\n                color: props.color\r\n        });\r\n        }\r\n      }}\r\n    >\r\n      <Text style={styles.buttonText}>{props.name}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  buttonStyle: {\r\n    flexDirection: \"row\",\r\n    marginVertical: 8,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: 350,\r\n    height: 90,\r\n    borderRadius: 20,\r\n    shadowColor: \"rgba(0,0,0, .4)\", // IOS\r\n    shadowOffset: { height: 1, width: 0 }, // IOS\r\n    shadowOpacity: 1, // IOS\r\n    shadowRadius: 1, //IOS\r\n    elevation: 1, // Android\r\n  },\r\n  buttonText: {\r\n    paddingHorizontal: 20,\r\n    color: \"#FFFFFF\",\r\n    fontSize: 24,\r\n  },\r\n});\r\n","import * as firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBNeeXQOz2-S3sk5bP_clXvLd3iLnPYeOg\",\r\n  authDomain: \"covid-19-ventilator-training.firebaseapp.com\",\r\n  databaseURL: \"https://covid-19-ventilator-training.firebaseio.com\",\r\n  projectId: \"covid-19-ventilator-training\",\r\n  storageBucket: \"covid-19-ventilator-training.appspot.com\",\r\n  messagingSenderId: \"25658178614\",\r\n  appId: \"1:25658178614:web:0b1acea69309b56e2e6c97\",\r\n  measurementId: \"G-X4TNFM04Y9\"\r\n};\r\n\r\nexport const app = firebase.initializeApp(firebaseConfig);\r\nexport const storageRef = app.storage();\r\nexport const db = app.database();\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Image, StyleSheet, Text, View } from \"react-native\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\nimport MyButton from \"../components/MyButton\";\r\nimport { db } from \"../config\";\r\n\r\nvar colors = [\"#7ED551\", \"#EFCB34\", \"#E75351\"];\r\n\r\nexport default function ClinicianScreen({ navigation }) {\r\n  const [cprData, setData] = useState({});\r\n\r\n  async function getData() {\r\n    try {\r\n      const snapshot = await db.ref(\"categories/\").once(\"value\");\r\n      let data = snapshot.val();\r\n      setData(data);\r\n\r\n      // console.log(data)\r\n    } catch (e) {\r\n      console.warn(e);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  function createButtons() {\r\n    let buttonList = [];\r\n    let i = 0;\r\n    Object.entries(cprData).map(([key, value]) => {\r\n      let name = key.replace(/_/g, \" \");\r\n      buttonList.push(\r\n        <MyButton name={name} color={colors[i % 3]} data={key} key={key} content = {false} />\r\n      );\r\n      i = i + 1;\r\n    });\r\n    return buttonList;\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ScrollView style={styles.container}>\r\n        <View style={styles.titleContainer}>\r\n          <Text style={styles.titleText}>\r\n            Clinician {\"\\n\"} Pocket Reference\r\n          </Text>\r\n          <Image\r\n            source={require(\"../assets/images/clinician.png\")}\r\n            style={styles.titleImage}\r\n          />\r\n          {createButtons()}\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\n//Styling\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  titleContainer: {\r\n    alignItems: \"center\",\r\n    marginTop: 10,\r\n    marginBottom: 20,\r\n  },\r\n  titleText: {\r\n    marginTop: 30,\r\n    marginBottom: 30,\r\n    fontSize: 36,\r\n    textAlign: \"center\",\r\n  },\r\n  titleImage: {\r\n    width: 150,\r\n    height: 150,\r\n    resizeMode: \"contain\",\r\n  },\r\n});\r\n","import * as React from 'react';\r\nimport { Image, Button, Platform, StyleSheet, Text, View, Alert, TouchableOpacity} from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\n\r\nexport default function PPEScreen({navigation}) {\r\n  return (\r\n    <View>\r\n        <Text>Placeholder for PPE Videos</Text>\r\n    </View>\r\n  );\r\n}\r\n","import { Ionicons } from '@expo/vector-icons';\r\nimport * as WebBrowser from 'expo-web-browser';\r\nimport * as React from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { RectButton, ScrollView } from 'react-native-gesture-handler';\r\n\r\nexport default function ResourcesScreen() {\r\n  return (\r\n\r\n    <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\r\n    <Text style={styles.titleText}>Resources</Text>   \r\n    <Text style={styles.subtitleText}>Useful Links</Text>  \r\n      <OptionButton\r\n        icon=\"md-school\"\r\n        label=\"Hospital Epidemiology and Infection Control (HEIC) Intranet\"\r\n        onPress={() => WebBrowser.openBrowserAsync('https://www.hopkinsmedicine.org/heic/')}\r\n      />\r\n      <OptionButton\r\n        icon=\"md-school\"\r\n        label=\"Center for Disease Control and Prevention\"\r\n        onPress={() => WebBrowser.openBrowserAsync('https://www.cdc.gov/')}\r\n        isLastOption\r\n      />\r\n\r\n    <Text style={styles.subtitleText}>Feedback</Text> \r\n    <OptionButton\r\n        icon=\"md-school\"\r\n        label=\"Comments or suggestions\"\r\n        onPress={() => WebBrowser.openBrowserAsync('https://docs.google.com/forms/d/e/1FAIpQLSeKC3seFS0pgsmH4vSkr8XCpzPq4VpmWTwzGGRDlL88krpy8g/viewform?usp=sf_link')}\r\n        isLastOption\r\n      />\r\n    </ScrollView>\r\n\r\n  )\r\n}\r\n\r\nfunction OptionButton({ icon, label, onPress, isLastOption }) {\r\n  return (\r\n    <RectButton style={[styles.option, isLastOption && styles.lastOption]} onPress={onPress}>\r\n      <View style={{ flexDirection: 'row' }}>\r\n        <View style={styles.optionIconContainer}>\r\n          <Ionicons name={icon} size={22} color=\"rgba(0,0,0,0.35)\" />\r\n        </View>\r\n        <View style={styles.optionTextContainer}>\r\n          <Text style={styles.optionText}>{label}</Text>\r\n        </View>\r\n      </View>\r\n    </RectButton>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fafafa',\r\n  },\r\n  contentContainer: {\r\n    paddingTop: 15,\r\n  },\r\n  optionIconContainer: {\r\n    marginRight: 12,\r\n  },\r\n  titleText: {\r\n    marginBottom: 30,\r\n    fontSize: 36,\r\n    textAlign: 'center',\r\n    fontWeight: 'bold'\r\n  },\r\n  subtitleText: {\r\n    marginHorizontal: 15,\r\n    marginBottom: 10,\r\n    fontSize: 20,\r\n    alignSelf: 'flex-start',\r\n    fontWeight: 'bold',\r\n  },\r\n  option: {\r\n    backgroundColor: '#fdfdfd',\r\n    paddingHorizontal: 15,\r\n    paddingVertical: 15,\r\n    borderWidth: StyleSheet.hairlineWidth,\r\n    borderBottomWidth: 0,\r\n    borderColor: '#ededed',\r\n  },\r\n  lastOption: {\r\n    borderBottomWidth: StyleSheet.hairlineWidth,\r\n    marginBottom: 10,\r\n  },\r\n  optionText: {\r\n    fontSize: 15,\r\n    alignSelf: 'flex-start',\r\n    marginTop: 1,\r\n    paddingHorizontal: 15,\r\n  },\r\n});","import React, {useEffect, useState }  from \"react\";\r\nimport {StyleSheet, Text, View } from \"react-native\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\nimport MyButton from \"../components/MyButton\";\r\nimport { db } from \"../config\";\r\n\r\n\r\nexport default function Screen({ route, navigation }) {\r\n  const { name } = route.params;\r\n  const { data } = route.params;\r\n  const { color } = route.params;\r\n  \r\n  const [cprData, setData] = useState({});\r\n\r\n  async function getData() {\r\n    const path = ''.concat(\"cpr/\", data);\r\n    try {\r\n      const snapshot = await db.ref(path).once(\"value\");\r\n      let data = snapshot.val();\r\n      setData(data)\r\n    } catch (e) {\r\n      console.warn(e);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  function createButtons() {\r\n    let buttonList = [];\r\n    let i = 0;\r\n    Object.entries(cprData).map(([key, value]) => {\r\n        let title = key.replace(/_/g, \" \");\r\n        buttonList.push(<MyButton name={title} data = {value} color={color} key={key} content={true}/>);\r\n        i = i + 1;\r\n    })\r\n    return buttonList;\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ScrollView style={styles.container}>\r\n        <View style={styles.titleContainer}>\r\n          <Text style={styles.titleText}>\r\n            {name}\r\n          </Text>\r\n          {createButtons()}\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\n//Styling\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  titleContainer: {\r\n    alignItems: \"center\",\r\n    marginTop: 10,\r\n    marginBottom: 20,\r\n  },\r\n  titleText: {\r\n    marginTop: 30,\r\n    marginBottom: 30,\r\n    fontSize: 36,\r\n    textAlign: \"center\",\r\n  },\r\n  titleImage: {\r\n    width: 150,\r\n    height: 150,\r\n    resizeMode: \"contain\",\r\n  },\r\n});","import React, {useEffect, useState }  from \"react\";\r\nimport {StyleSheet, Text, View } from \"react-native\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\n\r\n\r\nexport default function ContentScreen({ route }) {\r\n  const { name } = route.params;\r\n  const { data } = route.params;\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ScrollView style={styles.container}>\r\n        <View style={styles.titleContainer}>\r\n          <Text style={styles.titleText}>\r\n            {name}\r\n          </Text>\r\n          <Text style = {styles.text}>\r\n              {data}\r\n          </Text>\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\n//Styling\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  titleContainer: {\r\n    alignItems: \"center\",\r\n    marginTop: 10,\r\n    marginBottom: 20,\r\n    padding: 20\r\n  },\r\n  titleText: {\r\n    marginTop: 30,\r\n    marginBottom: 30,\r\n    fontSize: 36,\r\n    textAlign: \"center\",\r\n  },\r\n  titleImage: {\r\n    width: 150,\r\n    height: 150,\r\n    resizeMode: \"contain\",\r\n  },\r\n  text: {\r\n      fontSize: 16,\r\n  }\r\n});","import React from \"react\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\r\n\r\nexport default function MyButtonVent(props) {\r\n  const navigation = useNavigation();\r\n \r\n  return (\r\n    <TouchableOpacity\r\n      style={[{ backgroundColor: props.color }, styles.buttonStyle]}\r\n      onPress={() => {\r\n            navigation.navigate('Ventilator', {\r\n                name: props.name, \r\n                data: props.data,\r\n            });        \r\n\r\n        }\r\n      }\r\n    >\r\n      <Text style={styles.buttonText}>{props.name}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  buttonStyle: {\r\n    flexDirection: \"row\",\r\n    marginVertical: 8,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: 350,\r\n    height: 90,\r\n    borderRadius: 20,\r\n    shadowColor: \"rgba(0,0,0, .4)\", // IOS\r\n    shadowOffset: { height: 1, width: 0 }, // IOS\r\n    shadowOpacity: 1, // IOS\r\n    shadowRadius: 1, //IOS\r\n    elevation: 1, // Android\r\n  },\r\n  buttonText: {\r\n    paddingHorizontal: 20,\r\n    color: \"#FFFFFF\",\r\n    fontSize: 24,\r\n  },\r\n});\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Image, StyleSheet, Text, View } from \"react-native\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\nimport MyButtonVent from \"./MyButtonVent\";\r\nimport { db } from \"../config\";\r\n\r\nvar colors = [\"#7ED551\", \"#EFCB34\", \"#E75351\"];\r\n\r\nexport default function VentilationScreen({ navigation }) {\r\n  const [cprData, setData] = useState({});\r\n\r\n  async function getData() {\r\n    try {\r\n      const snapshot = await db.ref(\"Ventilator_Categories/\").once(\"value\");\r\n      let data = snapshot.val();\r\n      setData(data);\r\n\r\n      // console.log(data)\r\n    } catch (e) {\r\n      console.warn(e);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  function createButtons() {\r\n    let buttonList = [];\r\n    let i = 0;\r\n    Object.entries(cprData).map(([key, value]) => {\r\n      let name = key.replace(/_/g, \" \");\r\n      buttonList.push(\r\n        <MyButtonVent name={name} color={colors[i % 3]} data={key} key={key} />\r\n      );\r\n      i = i + 1;\r\n    });\r\n    return buttonList;\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ScrollView style={styles.container}>\r\n        <View style={styles.titleContainer}>\r\n          <Text style={styles.titleText}>\r\n            Ventilator Model {\"\\n\"}Reference\r\n          </Text>\r\n          <Image\r\n            source={require(\"../assets/images/ventilator.png\")}\r\n            style={styles.titleImage}\r\n          />\r\n          {createButtons()}\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\n//Styling\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  titleContainer: {\r\n    alignItems: \"center\",\r\n    marginTop: 10,\r\n    marginBottom: 20,\r\n  },\r\n  titleText: {\r\n    marginTop: 30,\r\n    marginBottom: 30,\r\n    fontSize: 36,\r\n    textAlign: \"center\",\r\n  },\r\n  titleImage: {\r\n    width: 150,\r\n    height: 150,\r\n    resizeMode: \"contain\",\r\n  },\r\n});\r\n","import * as React from 'react';\r\nimport { Image, Button, Platform, StyleSheet, Text, View, Alert, TouchableOpacity, Dimensions, Animated} from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport { Video } from 'expo-av';\r\nimport { db } from \"../config\";\r\nimport { app } from \"../config\";\r\nimport { storageRef } from \"../config\";\r\n\r\n\r\n//Log to local console for debugging\r\nfunction consoleLog(name) {\r\n\tconsole.log(name);\r\n}\r\n\r\n\r\n\r\nvar ventPicSrc; //source for vent picture\r\n\r\nexport default function Ventilator({route}) {\r\n  const { name } = route.params;\r\n  const { data } = route.params;\r\n  const namePath = (name.split(' ').join('_') + \"_Quick_Guide.png\");\r\n\r\n  //log info for debugging to console\r\n  consoleLog(name);\r\n  consoleLog(route);\r\n  consoleLog(namePath);\r\n\r\n  fetchQRGuidePic(namePath);\r\n\r\n\r\n//source={require(\"../assets/images/\" + name.split(' ').join('_') + \"_Quick_Guide.png\")}\r\n  return (\r\n    <View style = {styles.container}>\r\n        <ScrollView>\r\n          <Text style={styles.titleText}> {name + \" Quick Reference Guide\"} </Text>\r\n\r\n          <Image\r\n            style={{ width: 400, height: 400, alignSelf: 'center', margin: 10, transform: [{ scale: 1 }]}}\r\n            source={{uri: ventPicSrc}}\r\n\r\n          />\r\n\r\n            <Text style={styles.subtitleText}></Text>\r\n            <Text style={styles.subtitleText}>Tutorial Video</Text>\r\n            <Video\r\n              source={{ uri: 'https://www.youtube.com/watch?v=zjlS9sScfRk' }}\r\n              rate={1.0}\r\n              volume={1.0}\r\n              isMuted={false}\r\n              resizeMode=\"contain\"\r\n              useNativeControls={true}\r\n              style={{ width: 350, height: 197 , alignSelf: 'center'}}\r\n            />\r\n        </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\n\r\nfunction fetchQRGuidePic (namePath) { //fetch quick reference guide picture\r\n  var imgPath = app.storage().ref(\"/images/QwikRefGuide/\"); //google storage route\r\n  var ventRef = imgPath.child(namePath);//add name of ventilator\r\n  ventRef.getDownloadURL().then(function(url) {\r\n  ventPicSrc = url;\r\n\r\n  //debugging\r\n  consoleLog('linked ventPic');\r\n  consoleLog(ventPicSrc);\r\n});}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#ffff',\r\n  },\r\n  titleText: {\r\n    marginTop: 30,\r\n    marginBottom: 10,\r\n    fontSize: 30,\r\n    textAlign: 'center',\r\n  },\r\n  subtitleText: {\r\n    fontSize: 20,\r\n    // padding: 15,\r\n    paddingBottom: 20,\r\n    alignSelf: 'center'\r\n  },\r\n});\r\n","import * as React from \"react\";\r\nimport { Platform, StatusBar, StyleSheet, View } from \"react-native\";\r\nimport { SplashScreen } from \"expo\";\r\nimport * as Font from \"expo-font\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport BottomTabNavigator from \"./navigation/BottomTabNavigator\";\r\nimport useLinking from \"./navigation/useLinking\";\r\n\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport ClinicianScreen from \"./screens/ClinicianScreen\";\r\n\r\nimport PPEScreen from \"./screens/PPEScreen\";\r\nimport ResourcesScreen from \"./screens/ResourcesScreen\";\r\n\r\nimport Screen from \"./components/Screen\";\r\nimport ContentScreen from \"./components/ContentScreen\";\r\n\r\nimport VentilationScreen from \"./components/VentilationScreen\";\r\nimport Ventilator from \"./components/Ventilator\";\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function App(props) {\r\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\r\n  const [initialNavigationState, setInitialNavigationState] = React.useState();\r\n  const containerRef = React.useRef();\r\n  const { getInitialState } = useLinking(containerRef);\r\n\r\n  // Load any resources or data that we need prior to rendering the app\r\n  React.useEffect(() => {\r\n    async function loadResourcesAndDataAsync() {\r\n      try {\r\n        SplashScreen.preventAutoHide();\r\n\r\n        // Load our initial navigation state\r\n        setInitialNavigationState(await getInitialState());\r\n\r\n        // Load fonts\r\n        await Font.loadAsync({\r\n          ...Ionicons.font,\r\n          \"space-mono\": require(\"./assets/fonts/SpaceMono-Regular.ttf\"),\r\n        });\r\n      } catch (e) {\r\n        // We might want to provide this error information to an error reporting service\r\n        console.warn(e);\r\n      } finally {\r\n        setLoadingComplete(true);\r\n        SplashScreen.hide();\r\n      }\r\n    }\r\n\r\n    loadResourcesAndDataAsync();\r\n  }, []);\r\n\r\n  Platform.OS === \"ios\" && <StatusBar barStyle=\"default\" />;\r\n\r\n  if (!isLoadingComplete && !props.skipLoadingScreen) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <View style={styles.container}>\r\n        {<StatusBar barStyle=\"default\" />}\r\n        <NavigationContainer\r\n          ref={containerRef}\r\n          initialState={initialNavigationState}\r\n        >\r\n          <Stack.Navigator>\r\n            <Stack.Screen name=\"Root\" component={BottomTabNavigator} />\r\n            {/* <Stack.Screen name=\"Home\" component={HomeScreen} /> */}\r\n            <Stack.Screen\r\n              name=\"Clinician Pocket Reference\"\r\n              component={ClinicianScreen}\r\n              options={{\r\n                title: null,\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"Ventilation\"\r\n              component={VentilationScreen}\r\n              options={{\r\n                title: null,\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"PPE\"\r\n              component={PPEScreen}\r\n              options={{\r\n                title: null,\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"Resources\"\r\n              component={ResourcesScreen}\r\n              options={{\r\n                title: null,\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"Subscreen\"\r\n              component={Screen}\r\n              options={{\r\n                title: null,\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"Contentscreen\"\r\n              component={ContentScreen}\r\n              options={{\r\n                title: null,\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"Ventscreen\"\r\n              component={VentilationScreen}\r\n              options={{\r\n                title: null,\r\n              }}\r\n            />\r\n            <Stack.Screen\r\n              name=\"Ventilator\"\r\n              component={Ventilator}\r\n              options={{\r\n                title: null,\r\n              }}\r\n            />\r\n          </Stack.Navigator>\r\n        </NavigationContainer>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n});\r\n","import { useLinking } from '@react-navigation/native';\r\nimport { Linking } from 'expo';\r\n\r\nexport default function(containerRef) {\r\n  return useLinking(containerRef, {\r\n    prefixes: [Linking.makeUrl('/')],\r\n    config: {\r\n      Root: {\r\n        path: 'root',\r\n        screens: {\r\n          Home: 'home',\r\n          Links: 'links',\r\n          Settings: 'settings',\r\n        },\r\n      },\r\n    },\r\n  });\r\n}\r\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/splash.0c1539d5.png\";","module.exports = __webpack_public_path__ + \"static/media/PPE.01d54dce.png\";","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";"],"sourceRoot":""}